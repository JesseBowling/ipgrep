[project]
name = "ipgrep"
version = "0.1.1"
description = "A modular command line utility for extracting and enriching IP addresses from text"
readme = "README.md"
authors = [
    { name = "Jesse Bowling", email = "jessebowling@gmail.com" }
]
requires-python = ">=3.11"
dependencies = [
    "requests>=2.31.0",
    "ipinfo-db>=0.0.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "requests-mock>=1.11.0",
]

[project.scripts]
ipgrep = "ipgrep.cli:main"

[project.entry-points."ipgrep.enrichment"]
ipaddress = "ipgrep.plugins.enrichment.ipaddress_enrichment:IPAddressEnrichment"
asn_origin = "ipgrep.plugins.enrichment.asn_origin:OriginEnrichment"
asn_peer = "ipgrep.plugins.enrichment.asn_peer:PeerEnrichment"
asn_prefix = "ipgrep.plugins.enrichment.asn_prefix:PrefixEnrichment"
ipinfo = "ipgrep.plugins.enrichment.ipinfo:IPInfoEnrichment"

[project.entry-points."ipgrep.output"]
plain = "ipgrep.plugins.output.plain:PlainOutput"
csv = "ipgrep.plugins.output.csv:CSVOutput"
json = "ipgrep.plugins.output.json:JSONOutput"
space = "ipgrep.plugins.output.space_delimited:SpaceDelimitedOutput"
pipe = "ipgrep.plugins.output.pipe_delimited:PipeDelimitedOutput"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "--cov=ipgrep --cov-report=term-missing --cov-report=html"
markers = [
    "local: marks tests that do not require remote access",
    "remote: marks tests that require remote API access (deselect with '-m \"not remote\"')",
    "ratelimit: marks tests that may encounter rate limits"
]

[dependency-groups]
dev = [
    "black>=25.9.0",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "requests-mock>=1.12.1",
]
