name: Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      
      - name: Extract version from tag
        id: tag_version
        run: |
          TAG=${GITHUB_REF#refs/tags/v}
          echo "version=$TAG" >> $GITHUB_OUTPUT
          echo "Tag version: $TAG"
      
      - name: Extract version from pyproject.toml
        id: project_version
        run: |
          VERSION=$(uv run python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Project version: $VERSION"
      
      - name: Verify version match
        run: |
          if [ "${{ steps.tag_version.outputs.version }}" != "${{ steps.project_version.outputs.version }}" ]; then
            echo "Error: Tag version (${{ steps.tag_version.outputs.version }}) does not match pyproject.toml version (${{ steps.project_version.outputs.version }})"
            exit 1
          fi
          echo "Version match confirmed: ${{ steps.tag_version.outputs.version }}"
      
      - name: Install dependencies
        run: uv sync --all-extras
      
      - name: Build package
        run: uv build
      
      - name: Create release archive
        run: |
          cd dist
          zip -r ../release-${{ steps.tag_version.outputs.version }}.zip *
          cd ..
      
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ steps.tag_version.outputs.version }} \
            dist/*.whl \
            dist/*.tar.gz \
            release-${{ steps.tag_version.outputs.version }}.zip \
            --title "Release ${{ steps.tag_version.outputs.version }}"